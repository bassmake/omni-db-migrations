buildscript {
  repositories {
    mavenCentral()
  }
  ext {
    liquibaseGradleVersion = '2.0.1'
  }
  dependencies {
    classpath "org.liquibase:liquibase-gradle-plugin:$liquibaseGradleVersion"
  }
}

apply plugin: 'java'
apply plugin: 'org.liquibase.gradle'

group 'sk.bsmk'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}


dependencies {
  
  liquibaseRuntime "org.liquibase:liquibase-core:3.6.2"
  liquibaseRuntime "org.liquibase:liquibase-gradle-plugin:$liquibaseGradleVersion"
  liquibaseRuntime "org.liquibase:liquibase-groovy-dsl:$liquibaseGradleVersion"
  
}

liquibase {
  mainClassName 'org.liquibase.gradle.OutputEnablingLiquibaseRunner'
  activities {
    main {
      changeLogFile 'src/main/resources/db/changelog.xml'
      changeLogParameters(
        'schema': "",
        'table_tablespace': "input_table",
        'index_tablespace': "input_index"
      )
//      url 'jdbc:hsqldb:file:build/in-memory-db;sql.syntax_ora=true;sql.unique_nulls=false'
      url "offline:oracle?changeLogFile=${buildDir}/migration/databasechangelog.csv"
      username "sa"
      password ""
      outputFile "${buildDir}/migration/db_migraiton.sql"
    }
  }
}

task createMigrationFolder {
  doLast {
    def file = file("${buildDir}/migration")
    file.mkdirs()
  }
}


updateSQL {
  dependsOn createMigrationFolder
}

/*
  static HSQL(String projectDir) {
    new DbConnectionConfig(
      uri: "jdbc:hsqldb:file:${projectDir}/build/db/reports_db;hsqldb.lock_file=false;sql.syntax_ora=true;sql.unique_nulls=false",
      username: 'SA',
      password: '',
      schema: 'PUBLIC',
      indexTablespace: 'PUBLIC',
      tableTablespace: 'PUBLIC',
      jdbcDriver: 'org.hsqldb.jdbc.JDBCDriver',
      isAllowedDrop: true,
    )
  }
*/

wrapper {
  gradleVersion = '4.10.2'
  distributionType = Wrapper.DistributionType.ALL
}
